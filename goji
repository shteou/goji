#!/usr/bin/env python3

import argparse
import sys

def move_job(file, state, next_state):
  pass

def apply_job(file):
  pass

def apply_jobs():
  pass

class Goji(object):
  def __init__(self):
    parser = argparse.ArgumentParser(
             description='Runs one off jobs on Kubernetes',
             usage='''goji <command> [<args>]

   process    Process gitops jobs
   requeue    Requeues a job which is in a failed or unknown state

''')

    parser.add_argument('command', help='Subcommand to run')
    args = parser.parse_args(sys.argv[1:2])

    if not hasattr(self, args.command):
            print(args.command + ' is not a valid command')
            parser.print_help()
            exit(1)

    getattr(self, args.command)()

  def process(self):
    parser = argparse.ArgumentParser(
               description='''Process all queued jobs and update state of running jobs

  Possible states:
    queued    - Will be run during the next process
    succeeded - The job succeeded
    failed    - The job failed and can be requeued
    unknown   - Job is missing and success/failure cannot be determined
''')
    parser.add_argument('--repository')
    args = parser.parse_args(sys.argv[2:])
    print(args)


  def requeue(self):
    pass


if __name__ == '__main__':
  Goji()
